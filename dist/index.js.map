{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/components/LinkPreview/Skeleton.tsx","../src/components/LinkPreview/LinkPreview.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react';\nimport LoadingSkeleton from 'react-loading-skeleton';\n\nimport './skeleton.scss';\n\ninterface SkeletonProps {\n  width?: string | number;\n  imageHeight?: string | number;\n  margin?: string | number;\n}\n\nconst Skeleton: React.FC<SkeletonProps> = ({ width = '100%', imageHeight = '30vh', margin }) => {\n  return (\n    <div className='skeleton-container' style={{ width, margin }}>\n      <LoadingSkeleton width={width} height={imageHeight} />\n      <div className='skeleton-lower-container'>\n        <LoadingSkeleton count={3} />\n      </div>\n    </div>\n  );\n};\n\nexport default Skeleton;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport './linkPreview.scss';\nimport Skeleton from './Skeleton';\n\nconst proxyLink = 'https://rlp-proxy.herokuapp.com/v2?url=';\n\nexport interface LinkPreviewProps {\n  url: string;\n  className?: string;\n  width?: string | number;\n  height?: string | number;\n  descriptionLength?: number;\n  borderRadius?: string | number;\n  imageHeight?: string | number;\n  textAlign?: 'left' | 'right' | 'center';\n  margin?: string | number;\n  fallback?: JSX.Element[] | JSX.Element | null;\n  backgroundColor?: string;\n  primaryTextColor?: string;\n  secondaryTextColor?: string;\n  borderColor?: string;\n  showLoader?: boolean;\n  customLoader?: JSX.Element[] | JSX.Element | null;\n}\n\nexport interface APIResponse {\n  title: string | null;\n  description: string | null;\n  image: string | null;\n  siteName: string | null;\n  hostname: string | null;\n}\n\nexport const LinkPreview: React.FC<LinkPreviewProps> = ({\n  url,\n  className = '',\n  width,\n  height,\n  descriptionLength,\n  borderRadius,\n  imageHeight,\n  textAlign,\n  margin,\n  fallback = null,\n  backgroundColor = 'white',\n  primaryTextColor = 'black',\n  secondaryTextColor = 'rgb(100, 100, 100)',\n  borderColor = '#ccc',\n  showLoader = true,\n  customLoader = null,\n}) => {\n  const _isMounted = useRef(true);\n  const [metadata, setMetadata] = useState<APIResponse | null>();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    _isMounted.current = true;\n    setLoading(true);\n    fetch(proxyLink + url)\n      .then((res) => res.json())\n      .then((res) => {\n        if (_isMounted.current) {\n          setMetadata((res.metadata as unknown) as APIResponse);\n          setLoading(false);\n        }\n      })\n      .catch((err: Error) => {\n        console.error(err);\n        console.error('No metadata could be found for the given URL.');\n        if (_isMounted.current) {\n          setMetadata(null);\n          setLoading(false);\n        }\n      });\n\n    return () => {\n      _isMounted.current = false;\n    };\n  }, [url]);\n\n  if (loading && showLoader) {\n    if (customLoader) {\n      return <>{customLoader}</>;\n    } else {\n      return <Skeleton width={width} imageHeight={imageHeight} margin={margin} />;\n    }\n  }\n\n  if (!metadata) {\n    return <>{fallback}</>;\n  }\n  \n  const { image, description, title, siteName, hostname } = metadata;\n  let image_url: string | undefined;\n  if (image != \"https://rlp-proxy.herokuapp.com/img-placeholder.jpg\") {\n    if (!!image?.match(/https?:\\/\\//)) {\n      const url_ = new URL(image, url);\n      image_url = url_.href;\n    }\n  };\n\n  const onClick = () => {\n    window.open(url, '_blank');\n  };\n\n  return (\n    <div\n      data-testid='container'\n      onClick={onClick}\n      className={`Container ${className}`}\n      style={{ width, height, borderRadius, textAlign, margin, backgroundColor, borderColor }}\n    >\n      {image_url && (\n        <div\n        data-testid='image-container'\n        style={{\n          borderTopLeftRadius: borderRadius,\n          borderTopRightRadius: borderRadius,\n          backgroundImage: `url(${image})`,\n          height: imageHeight,\n        }}\n        className='Image'\n      ></div>\n      )}\n      <div className='LowerContainer'>\n        <h3 data-testid='title' className='Title' style={{ color: primaryTextColor }}>\n          {title}\n        </h3>\n        {description && (\n          <span\n            data-testid='desc'\n            className='Description Secondary'\n            style={{ color: secondaryTextColor }}\n          >\n            {descriptionLength\n              ? description.length > descriptionLength\n                ? description.slice(0, descriptionLength) + '...'\n                : description\n              : description}\n          </span>\n        )}\n        <div className='Secondary SiteDetails' style={{ color: secondaryTextColor }}>\n          {siteName && <span>{siteName} â€¢ </span>}\n          <span>{hostname}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Skeleton","width","imageHeight","margin","React","className","LoadingSkeleton","height","count","url","descriptionLength","borderRadius","textAlign","fallback","backgroundColor","primaryTextColor","secondaryTextColor","borderColor","showLoader","customLoader","_isMounted","useRef","metadata","setMetadata","useState","loading","setLoading","useEffect","current","fetch","then","res","json","catch","err","console","error","image","description","title","siteName","hostname","image_url","match","URL","href","onClick","window","open","borderTopLeftRadius","borderTopRightRadius","backgroundImage","color","length","slice"],"mappings":"yNAAA,SAASA,EAAYC,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,0hCCZ9C,MAAMe,EAAoC,EAAGC,MAAAA,EAAQ,OAAQC,YAAAA,EAAc,OAAQC,OAAAA,KAE/EC,+BAAKC,UAAU,qBAAqBd,MAAO,CAAEU,MAAAA,EAAOE,OAAAA,IAClDC,wBAACE,WAAgBL,MAAOA,EAAOM,OAAQL,IACvCE,+BAAKC,UAAU,4BACbD,wBAACE,WAAgBE,MAAO,0BCkBuB,EACrDC,IAAAA,EACAJ,UAAAA,EAAY,GACZJ,MAAAA,EACAM,OAAAA,EACAG,kBAAAA,EACAC,aAAAA,EACAT,YAAAA,EACAU,UAAAA,EACAT,OAAAA,EACAU,SAAAA,EAAW,KACXC,gBAAAA,EAAkB,QAClBC,iBAAAA,EAAmB,QACnBC,mBAAAA,EAAqB,qBACrBC,YAAAA,EAAc,OACdC,WAAAA,GAAa,EACbC,aAAAA,EAAe,SAEf,MAAMC,EAAaC,UAAO,IACnBC,EAAUC,GAAeC,cACzBC,EAASC,GAAcF,YAAS,GA2BvC,GAzBAG,aAAU,KACRP,EAAWQ,SAAU,EACrBF,GAAW,GACXG,MAtDc,0CAsDIpB,GACfqB,MAAMC,GAAQA,EAAIC,SAClBF,MAAMC,IACDX,EAAWQ,UACbL,EAAaQ,EAAIT,UACjBI,GAAW,OAGdO,OAAOC,IACNC,QAAQC,MAAMF,GACdC,QAAQC,MAAM,iDACVhB,EAAWQ,UACbL,EAAY,MACZG,GAAW,OAIV,KACLN,EAAWQ,SAAU,KAEtB,CAACnB,IAEAgB,GAAWP,EACb,OAAIC,EACKf,gDAAGe,GAEHf,wBAACJ,GAASC,MAAOA,EAAOC,YAAaA,EAAaC,OAAQA,IAIrE,IAAKmB,EACH,OAAOlB,gDAAGS,GAGZ,MAAMwB,MAAEA,EAAKC,YAAEA,EAAWC,MAAEA,EAAKC,SAAEA,EAAQC,SAAEA,GAAanB,EAC1D,IAAIoB,EACJ,GAAa,uDAATL,GACIA,GAAOM,MAAM,eAAgB,CAEjCD,EADa,IAAIE,IAAIP,EAAO5B,GACXoC,KAQrB,OACEzC,6CACc,YACZ0C,QAPY,KACdC,OAAOC,KAAKvC,EAAK,WAOfJ,UAAW,aAAaA,IACxBd,MAAO,CAAEU,MAAAA,EAAOM,OAAAA,EAAQI,aAAAA,EAAcC,UAAAA,EAAWT,OAAAA,EAAQW,gBAAAA,EAAiBG,YAAAA,IAEzEyB,GACCtC,6CACY,kBACZb,MAAO,CACL0D,oBAAqBtC,EACrBuC,qBAAsBvC,EACtBwC,gBAAiB,OAAOd,KACxB9B,OAAQL,GAEVG,UAAU,UAGZD,+BAAKC,UAAU,kBACbD,4CAAgB,QAAQC,UAAU,QAAQd,MAAO,CAAE6D,MAAOrC,IACvDwB,GAEFD,GACClC,8CACc,OACZC,UAAU,wBACVd,MAAO,CAAE6D,MAAOpC,IAEfN,GACG4B,EAAYe,OAAS3C,EACnB4B,EAAYgB,MAAM,EAAG5C,GAAqB,MAE5C4B,GAGRlC,+BAAKC,UAAU,wBAAwBd,MAAO,CAAE6D,MAAOpC,IACpDwB,GAAYpC,oCAAOoC,SACpBpC,oCAAOqC"}